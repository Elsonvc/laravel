name: Deploy to Development

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  composer_development:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'

    - name: Install Composer dependencies
      run: composer install

  npm_development:
    runs-on: ubuntu-latest
    needs: composer_development
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install npm dependencies
      run: npm install

  create_env_file:
    runs-on: ubuntu-latest
    needs: npm_development
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Retrieve LARAVEL_ENV from Parameter Store
      id: ssm
      uses: poad/get-aws-ssm-parameter@v2.0.0
      with:
        parameter-name: laravel_env
        aws-region: us-east-2

    - name: Create .env file
      run: |
        touch .env
        echo "APP_ENV=PROD" > .env
        echo "LARAVEL_ENV=${{ steps.ssm.outputs.value }}" >> .env
        # Add more environment variables as needed

    - name: Upload .env file as artifact
      uses: actions/upload-artifact@v3
      with:
        name: env-file
        path: .env

  zip_application:
    runs-on: ubuntu-latest
    needs: create_env_file
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download .env file
      uses: actions/download-artifact@v3
      with:
        name: env-file

    - name: Create deployment package
      run: |
        zip -r laravel.zip .  # Create a ZIP file of the application
    - name: List files in directory
      run: ls -l
    - name: Upload ZIP to S3
      run: |
        aws s3 cp laravel.zip s3://elson-testing/app/laravel.zip --region us-east-2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
  deploy_development:
    runs-on: ubuntu-latest
    needs: zip_application
    steps:
    - name: Create a new deployment
      id: create_deployment
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      run: |
        deployment_id=$(aws deploy create-deployment \
          --application-name ${{ secrets.APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name ${{ secrets.DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=elson-testing,key=app/laravel.zip,bundleType=zip \
          --query 'deploymentId' --output text)
        echo "Deployment ID: $deployment_id"
        echo "deployment_id=$deployment_id" >> $GITHUB_ENV
    - name: Check deployment status
      run: |
       ./check-deployment-status.sh ${{ steps.create_deployment.outputs.deployment_id }} us-east-2
       env:
       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

